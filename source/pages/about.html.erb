---
title: About
description: "This is an about page"
permalink: "about"
---

<%= partial 'templates/components/callout', locals: { type: "question", title: "Information", text: "This site is in draft (obviously). This page gives some general about information, and some examples of functions for writing process" } %>


<p> The idea of this collection was to collate a set of ethics guidelines particularly focused on education and AI (separately and together). The focal guidelines are under various open licenses, that should permit their reuse in this way; each element from the items should be cited. </p>

<p> This setup allows us to disaggregate the various elements, and to map connections: </p>

<ul>
<li> Inter-guideline, i.e., between them. So we can see which elements are similar/different, and draw on the resources of one guideline in addressing challenges or principles from another </li>
<li> Intra-guideline, i.e., within them. So we can see really clearly how, e.g., particular challenges relate to the principles within the document itself. Some guidelines do this explicitly but through a flat document, while often it is implicit. </li>
</ul>

### Some function reminders

<p>Below is an example of pulling the filtered data in, in a pre-defined way. </p>


<h3> Examples of 'SoTL' in Title, and category is 'Strategies' </h3>

<%
  # Filter the tonic_collection based on specific conditions
  # match looks for the text, category is obvious, etc.
  display_items = tonic_collection.select do |item|
    item[:title]&.match(/SoTL/i) && item[:category] == "Strategies"
  end
%>

<div id="collection-container" class="mt-4 grid sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-6">
  <% display_items.each do |item| %>
    <%= partial 'templates/collection/item_card', locals: { item: item } %>
  <% end %>
</div>

## Some examples of other things

<!--I hate css-->

<button type="button" class="text-white bg-blue-700 hover:bg-blue-800 focus:outline-none focus:ring-4 focus:ring-blue-300 font-medium rounded-full text-sm px-5 py-2.5 text-center mr-2 mb-2 dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800">Hello world</button>

<%= partial 'templates/components/markdown', locals: { markdown_text: "

## Markdown Example\n\n

This is *italic* and **bold**.

## Hello world

* I
* think
* hello

"} %>

This page is included using a partial: if this was wraped for a partial it would include the page introduction

partial 'templates/components/markdown', locals: { markdown_text: File.read('source/pages/01-introduction.html.erb')}

<%= link_to "Previous section", "#introduction", class: "index-link" %>


<%= partial 'templates/components/markdown', locals: { markdown_text: File.read('source/pages/02-respect-for-persons.html.erb')} %>


<%= partial 'templates/components/callout', locals: { type: "question", title: "How is AI research different?", text: partial('templates/components/markdown', locals: { markdown_text: '

This is *italic* and **bold**.


* I
* think
* hello

'} ) } %>


<%= link_to "human Skills", "/rec42p8u9usfyctv9" %>

<%= link_to "Get More Books", "/rec42p8u9usfyctv9", class: "index-link" %>

<%= link_to "Get More Books", "/rec42p8u9usfyctv9", class:"text-white bg-blue-700 hover:bg-blue-800 focus:ring-4 focus:ring-blue-300 font-medium rounded-lg text-sm px-5 py-2.5 mr-2 mb-2 dark:bg-blue-600 dark:hover:bg-blue-700 focus:outline-none dark:focus:ring-blue-800" %>


<div name="additional-content" div class="content-center">

  <h2>Additional Content</h2>
  <p>This is some additional content you want to display below the collection...it ain't markdown</p>
</div>

<%= partial 'templates/components/includeset', locals: { my_filters: '(item[:title]&.match(/Turing responsible|national statement|^IEEE|EC guidelines on AI in education for educators|ethics in the scholarship of teaching and learning|markham/i) || item[:Description]&.match(/Turing responsible|national statement|Autonomous and intelligent technical systems are|EC guidelines on AI in education for educators|ethics in the scholarship of teaching and learning|markham/i) ) && item[:category] == "Sources"' } %>

### includeset and itemkeys

(Documentation from chatGPT, is accurate description)

The partial template is being passed a locals hash, which contains a single key-value pair. The key is my_filters, and the value is a long string of Ruby code. This string is specifying a set of filters or conditions that will be used to filter items based on certain criteria.

Let's break down the string value within the locals hash:

"item[:category] == 'Challenges' && (item[:ChallengeInstances].is_a?(Array) ? item[:ChallengeInstances]&.compact&.any? { |challenge| challenge&.match?(/#{keys_content}/i) } : item[:Challenges]&.match?(/#{keys_content}/i))"

This string represents a conditional expression that will be evaluated for each item. It checks if the item's category is equal to 'Challenges'. If it is, it proceeds to the next part of the condition.

The next part is a ternary operator (?:), which checks if item[:ChallengeInstances] is an array. If it is, it applies a series of operations to it. It uses the & operator to safely call the compact method (to remove any nil values) and the any? method with a block to check if any of the challenges within the array match a regular expression pattern generated by the keys_content variable. The match? method is used to perform a case-insensitive match using the /#{keys_content}/i regular expression pattern.

If item[:ChallengeInstances] is not an array, it falls back to checking if item[:Challenges] (presumably a string) matches the same regular expression pattern generated by keys_content using the match? method.

Overall, this code snippet is including a partial template and passing a set of filters or conditions as a local variable called my_filters. These filters are likely used within the included partial template to determine which items should be rendered or displayed based on the specified conditions.

So these look like (with different types)

> keys_content = partial "templates/components/getkeys", locals: { my_filters: "item[:category] == 'ChallengeInstances' && (item[:tags].include? 'AI' && item[:title]&.match?(/Respect for persons|Autonomy|informed consent|agency|protection of vulnerable persons/i)" }


> partial "templates/components/includeset", locals: { my_filters: "item[:category] == 'Challenges' && (item[:ChallengeInstances].is_a?(Array) ? item[:ChallengeInstances]&.compact&.any? { |challenge| challenge&.match?(/#{keys_content}/i) } : item[:Challenges]&.match?(/#{keys_content}/i))" }

### Callouts

There are a few callout types, and ways of including content in them (unfortunately I can't work out how to ommit variables, although passing e.g. title: "" seems to be allowed at least).

This method lets you include a variable as the callout_content (e.g., by callout_content = partial "..." using the includeset model above)

> partial 'templates/components/callout', locals: { type: "information", title: "How is AI research different?", text: "#{callout_content}"}

> partial 'templates/components/callout', locals: { type: "information", title: "How is research on learning different?", text: partial('templates/components/markdown', locals: { markdown_text: "Some feature... " }) }

> partial 'templates/components/callout', locals: { type: "information", title: "How is AI research different?", text: "I mean, obviously this is ok too" }



<%= partial 'templates/components/callout', locals: { type: "information", title: "How is AI research different?", text: partial('templates/components/markdown', locals: { markdown_text: 'Some features that will be discussed in later pages that may be particularly salient of research involving technology and AI specifically include:

* Long-range and indirect impacts - AI has potential to have impact beyond just on the participants involved into society, and it may not be clear what these impacts will be
* Researcher-participant relationships - AI and associated infrastructure has shifted relationships of researchers and participants through greater secondary use of data, online platforms that connect (sometimes invisibly) participants to researchers, and heightened risks of re-identification
* Commercial interests - while significant AI work is derived from publicly funded research, commercial actors have significant interests and this may impact relationships between funders-technology providers-researchers-public with blured lines between these groups, and complex power dynamics
* Accountability and human dignity - many technologies aim to automate aspects of human decision making in ways that may diminish human autonomy, and where it is not always transparent what basis decisions are made on, or the evidence that systems perform to an acceptable level in these decisions

'} ) } %>



<h3>Particular Challenges, Cases, and Strategies</h3>

These are strategies that relate to beneficence and harm avoidance.

<% keys_content = partial "templates/components/getkeys", locals: { my_filters: "item[:title]&.match?(/justice|fairness/i) && item[:category] == 'Principles'" } %>
<%= partial "templates/components/cardset", locals: { my_filters: "item[:category] == 'Strategies' && (item[:Principles].is_a?(Array) ? item[:Principles]&.compact&.any? { |principle| principle&.match?(/#{keys_content}/i) } : item[:Principles]&.match?(/#{keys_content}/i))" } %>
